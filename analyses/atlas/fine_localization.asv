function fine_localization

%{
At individual region level, get node strength. Then normalize across
patients. Do SOZ regions have higher or lower connectivity than non SOZ
regions?

Edit this to:
- see if average intrinsic connectivity of Left different from right - no,
same
- see if average intrinsic connectivity of SOZ laterality different from
that of non-SOZ (don't normalize)
- then restrict to correct laterality.
- then exclude regions without many patients to normalize
- then normalize
- see if node strength different for SOZ vs non SOZ locations
%} 

%% Parameters
norm_pca = 0;
delete_nans = 1;
norm_with_normal =0;
do_plots = 1;
which_atlas = 'aal_bernabei';%%'brainnetome';
plot_type = 'scatter';
coverage_limit = 20;

%% Get file locs
locations = fc_toolbox_locs;
results_folder = [locations.main_folder,'results/'];
atlas_folder = [results_folder,'analysis/atlas/'];

bct_folder= locations.bct;
out_folder = [results_folder,'analysis/atlas/'];
plot_folder = [results_folder,'analysis/atlas/plots/'];
if ~exist(out_folder,'dir'), mkdir(out_folder); end
if ~exist(plot_folder,'dir'), mkdir(plot_folder); end

% add script folder to path
scripts_folder = locations.script_folder;
addpath(genpath(scripts_folder));
addpath(genpath(bct_folder));

%% Get spikes
%{
sleep_data_folder = [scripts_folder,'analyses/sleep/data/'];
spikes_out = load([sleep_data_folder,'out.mat']);
spikes_out = spikes_out.out;
all_elecs_rates = spikes_out.bin_out.all_elecs_rates;
%}

%% Load atlas
out = load([atlas_folder,which_atlas,'.mat']);
out = out.out;

%% Load soz lats
%{
soz_out = load('out.mat');
soz_out = soz_out.out.circ_out;
soz_lats = soz_out.all_lats;
soz_locs = soz_out.all_locs;
%}
soz_locs = out.all_soz_locs;
soz_lats = out.all_soz_lats;

right_lat = strcmp(soz_lats,'right');
left_lat = strcmp(soz_lats,'left');

atlas = out.atlas;
atlas_norm = out.normal_atlas;
names = out.atlas_names;

atlas_nums = out.atlas_nums;
nregions = length(names);
assert(nregions==size(atlas,1))
npts = size(atlas,3);
sozs = out.sozs;
bin_soz = (cell2mat(cellfun(@(x) ismember(atlas_nums',x),sozs,'uniformoutput',false)))';

%% Get spike rates in each parcel
spikes = out.spikes_atlas;

%% Localize SOZ
mt = strcmp(soz_locs,'mesial temporal');
tn = strcmp(soz_locs,'temporal neocortical');
oc = strcmp(soz_locs,'other cortex');
temporal = contains(soz_locs,'temporal');
extra = strcmp(soz_locs,'other cortex') | strcmp(soz_locs,'diffuse') | strcmp(soz_locs,'multifocal');

%% Get locs and lats for atlas names
[locs,lats] = lateralize_regions(names,which_atlas);
left = strcmp(lats,'L');
right = strcmp(lats,'R');
neither_lat = ~left & ~right;
lr_order = reorder_lr(locs,lats);

assert(sum(left)==sum(right));

broad_locs = localize_regions(names,which_atlas);
broad_regions = {'left mesial temporal','right mesial temporal',...
    'left temporal neocortical','right temporal neocortical',...
    'left other cortex','right other cortex'};
nbroad = length(broad_regions);

%% Change all orders to left and right
left = left(lr_order);
right = right(lr_order);
neither_lat = neither_lat(lr_order);
atlas = atlas(lr_order,lr_order,:);
names = names(lr_order);
locs = locs(lr_order);
lats = lats(lr_order);

%% First, build symmetric coverage atlas
[symm_cov_atlas,all_bilateral] = build_symmetric_coverage_atlas(atlas,locs,lats);


%% Build a SOZ - non SOZ laterality ordered atlas
[soz_non_soz_ordered_atlas,soz,non_soz] = build_soz_ordered_atlas(atlas,left,right,right_lat,left_lat);
soz_non_soz_ordered_atlas_symm_cov = build_soz_ordered_atlas(symm_cov_atlas,left,right,right_lat,left_lat);


%% Get simple names for plotting
names_minus_lat = cellfun(@(x) x(1:end-9),names,'uniformoutput',false);
if strcmp(which_atlas,'aal_bernabei')
    simple_names = cell(length(names),1);
    for i = 1:length(names)
        C = strsplit(names{i},'_');
        simple_names{i} = C{1};
    end
else
    simple_names = names;
end

%% symm coverage test
lu_square = soz_non_soz_ordered_atlas_symm_cov(soz,soz,:);
rl_square = soz_non_soz_ordered_atlas_symm_cov(non_soz,non_soz,:);
lu_mean = squeeze(nanmean(lu_square,[1 2]));
rl_mean = squeeze(nanmean(rl_square,[1 2]));
soz_non_soz = [lu_mean rl_mean];    

%% Show my SOZ-non SOZ ordered matrices
if do_plots
    figure
    set(gcf,'position',[10 10 1000 800])
    tiledlayout(2,2,'tilespacing','compact','padding','tight')

    nexttile
    pretty_matrix(nanmean(soz_non_soz_ordered_atlas(~neither_lat,~neither_lat,:),3),...
        {'SOZ','non-SOZ'},sum(left),'r^2',0)
    title('Average connectivity')
    
    nexttile
    pretty_matrix(all_bilateral(~neither_lat,:),...
        {'SOZ','non-SOZ'},sum(left),[],1)
    title('Regions with symmetric coverage')
    
    
    nexttile
    pretty_matrix(nanmean(soz_non_soz_ordered_atlas_symm_cov(~neither_lat,~neither_lat,:),3),...
        {'SOZ','non-SOZ'},sum(left),'r^2',0)
    title('Average connectivity (symmetric coverage only)')


    nexttile
    stats = plot_paired_data(soz_non_soz',{'SOZ','non-SOZ','non-SOZ'},'Intrinsic connectivity','paired',plot_type);
    title('
    
end

print(gcf,[plot_folder,'lat_',which_atlas],'-dpng')


%{


if 0
    figure
    stats = plot_paired_data(([lu_mean rl_mean])',{'SOZ','non-SOZ','non-SOZ'},'Intrinsic connectivity','paired',plot_type);

end
%}

end